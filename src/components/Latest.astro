---
const {type, form} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Card Grid with Expanded View</title>
    <style>
        /* Modal styles */
        #modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        #modalContent {
            background: white;
            padding: 20px;
            border-radius: 8px;
            max-width: 600px;
            width: 90%;
            position: relative;
        }
        #closeModal {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            font-size: 24px;
        }
        #modalImage {
            max-width: 100%;
            max-height: 300px;
            object-fit: cover;
            margin-bottom: 10px;
        }
        
    </style>
</head>
<body>
    <div class="flex flex-col" data-type={type}>
        <h1 class="flex text-xl font-semibold justify-center">Posts</h1>
        <div id="container" class="flex flex-col items-end">
            <div id="cardsContainer" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 p-4">
                <!-- Cards will be dynamically inserted here -->
            </div>
        </div>
    </div>

    <!-- Modal for expanded view -->
    <div id="modal" class="flex">
        <div id="modalContent" class="relative">
            <span id="closeModal" class="text-red-600">&times;</span>
            <img id="modalImage" src="" alt="Event Image">
            <h3 id="modalTitle" class="text-xl font-semibold"></h3>
            <p id="modalBody" class="text-gray-700 mt-2"></p>
            <p id="modalDate" class="text-gray-500 mt-2 text-sm"></p>
        </div>
    </div>

    <script>
        let collection = [];
        const container = document.querySelector('div[data-type]');
        const type = container.getAttribute('data-type').toLowerCase();
        const url = '/' + type;

        async function fetchData() {
            try {
                const response = await fetch(url);
                if (response.ok) {
                    collection = await response.json();
                    sortCollectionByDate();
                    updateCards();
                } else {
                    console.error('Failed to fetch data:', response.statusText);
                }
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        function formatBody(body) {
            return body.replace(/\n/g, '<br>');
        }

        function formatDate(dateTime) {
            const date = new Date(dateTime);
            return date.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
        }

        function sortCollectionByDate() {
            collection.sort((a, b) => new Date(b.dateTime) - new Date(a.dateTime));
        }

        function updateCards() {
            const cardsContainer = document.getElementById('cardsContainer');
            cardsContainer.innerHTML = '';

            collection
                .filter(item => item.published === 1) // Only include items where published is 1
                .forEach(item => {
                    console.log('Item:', item); // Log item data to verify
                    const card = document.createElement('div');
                    card.classList.add('bg-white', 'p-0', 'rounded', 'shadow-lg', 'relative', 'w-80', 'h-full', 'cursor-pointer', 'overflow-hidden');
                    card.dataset.title = item.title;
                    card.dataset.body = item.body;
                    card.dataset.date = item.dateTime;
                    card.dataset.imageurl = item.imageurl;

                    const image = document.createElement('img');
                    image.classList.add('w-full', 'h-48', 'object-cover', 'mb-4');
                    image.src = item.imageurl; // Fallback image URL

                    const title = document.createElement('h3');
                    title.classList.add('text-xl', 'font-semibold', 'px-4');
                    title.textContent = item.title;

                    const date = document.createElement('p');
                    date.classList.add('text-gray-500', 'text-sm', 'px-4', 'pb-4');
                    date.textContent = formatDate(item.dateTime) || 'No date available'; // Fallback text

                    card.appendChild(image)
                    card.appendChild(title);
                    card.appendChild(date);
                    card.addEventListener('click', () => showModal(item));

                    cardsContainer.appendChild(card);
                });
        }

        function showModal(item) {
            document.getElementById('modalTitle').textContent = item.title;
            document.getElementById('modalBody').innerHTML = formatBody(item.body);
            document.getElementById('modalDate').textContent = formatDate(item.dateTime) || 'No date available'; // Fallback text
            document.getElementById('modalImage').src = item.imageurl;
            document.getElementById('modal').style.display = 'flex';
        }

        function closeModal() {
            document.getElementById('modal').style.display = 'none';
        }

        document.getElementById('closeModal').addEventListener('click', closeModal);

        document.addEventListener('DOMContentLoaded', () => {
            fetchData();
            setInterval(fetchData, 5000);
        });
    </script>
</body>
</html>
